# overall maximum number of page-fetching virtual threads
populardirectors.maxthreads=10000

# 100000 # along with 1st-page-defined "perPage" AND populardirectors.maxthreads, defines real number of page-fetching threads
populardirectors.maxmovies_inmemory=100000

# -> http://localhost:8099/mock-movie/info?page=
populardirectors.base_movie_url=http://localhost:8099/mock-movie/info?page=

# true -> allow_incomplete_data, true=return partially loaded data (status code 206), false=status code 503 (Service Unavailable)
populardirectors.allow_incomplete_data=true

# true -> abort_on_timeout, true=abort fetching, api will not be usable, false=ignore page when it times out
populardirectors.abort_on_pagefetch_timeout=true

# 0 -> endpoint_max_fetch_wait, millis, > 0 (i.e 4000=4 seconds) will wait for a while for fetches all done
populardirectors.endpoint_max_fetch_wait=0

# 250 -> endpoint_millis_sleep_awaiting_done , millis, each sleep awaiting done (must be > 0 when endpoint_max_fetch_wait > 0)
populardirectors.endpoint_millis_sleep_awaiting_done=250

# false -> enable_persistence=true for faster application restarts/data_loads, but slower initial complete page fetches
populardirectors.enable_persistence=false



server.port=8098

spring.datasource.url=jdbc:h2:file:/tmp/directors_h2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=TRUE;AUTO_RECONNECT=TRUE;AUTOCOMMIT=OFF

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.jpa.hibernate.ddl-auto=none

spring.h2.console.enabled=false

spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false


spring.flyway.enabled=true
